# This workflow lints the PR's title and commits. It uses the commitizen
# package (https://github.com/commitizen-tools/commitizen) and its `cz`
# tool to check the title of the PR and all commit messages of the branch
# which triggers this Action.

name: Pull Request
on:
  pull_request:
    branches:
    - main
    - staging
    types:
    - opened
    - reopened
    - edited
    - synchronize
permissions:
  contents: read

jobs:
  conventional-commits:
    name: Check PR title and commit messages
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # v4.2.0
      with:
        python-version: '3.10'

    # Install Commitizen without using the package's Makefile: that's much faster than
    # creating a venv and installing heaps of dependencies that aren't required for
    # this job. Then run Commitizen to check the title of the PR which triggered this
    # workflow, and check all commit messages of the PR's branch. If any of the checks
    # fails then this job fails.
    - name: Set up Commitizen
      run: |
        pip install --upgrade pip wheel
        pip install 'commitizen ==2.32.1'
    - name: Check PR title
      run: echo "$PR_TITLE" | cz check
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
    - name: Check PR commit messages
      run: cz check --rev-range origin/$PR_BASE_BRANCH_NAME..origin/$PR_HEAD_BRANCH_NAME
      env:
        PR_BASE_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
        PR_HEAD_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

  build:
    needs: conventional-commits
    uses: ./.github/workflows/build.yaml
    permissions:
      contents: write
    secrets: inherit
